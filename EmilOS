 --EmilOS
local version = 1.44
 --(c) 2015 Emil Inc. All Rights Reserved

 --Locals
local appX = {4,14,24,34,44,4,14,24,34,44}
local appY = {4,12}
local peripherals = {}
local nSidebarPage = 1
local clicked = false
local currentMessages = {}

 --Load Settings, EmilWorks, Framework and Peripherals
setFile = fs.open("System/settings","r")
local settings = textutils.unserialize(setFile.readAll())
setFile.close()
os.loadAPI("System/emilworks")
os.loadAPI("System/framework")
for k,v in pairs(rs.getSides()) do
	peripherals[v] = peripheral.getType(v)
end

 --Request Update info
framework.httpRequest("http://"..settings.serverUrl.."/EmilOSScript.php","request=GetAppList1")

 --Functions
function getInstalledApps()
	loadedApps = {}
	for k,v in pairs(fs.list("Apps")) do
		if not fs.isDir("Apps/"..v) and v ~= "Disk" then
			table.insert(loadedApps,v)
		end
	end
	if fs.exists("disk") then
		table.insert(loadedApps,"Disk")
		nDisk = #loadedApps
	end
end
function drawMain()
	bPopup = false
	framework.clearPopup()
	term.setBackgroundColor(colors[settings.background])
	term.setTextColor(colors.black)
	term.clear()
	paintutils.drawLine(1,1,51,1,colors.white)
	term.setCursorPos(3,1)
	write("EmilOS")
	term.setCursorPos(11,1)
	if isGettingData or serverNotReachable then
		if isGettingData then
			term.setTextColor(colors.lightGray)
			write("*")
		elseif serverNotReachable then
			term.setTextColor(colors.red)
			write("*")
		end
	else
		write("*")
	end
	paintutils.drawLine(30,1,48,1,colors.white)
	term.setCursorPos(48 - textutils.formatTime(os.time(),settings.fullClock):len(),1)
	term.setBackgroundColor(colors.white)
	term.setTextColor(colors.black)
	write(textutils.formatTime(os.time(),settings.fullClock))
	term.setCursorPos(50,1)
	write("@")
	getInstalledApps()
	for i=1,#loadedApps do
		if loadedApps[i] ~= nil then
			if fs.exists("Apps/AppIcons/"..loadedApps[i]) then
				image = paintutils.loadImage("Apps/AppIcons/"..loadedApps[i])
			else
				image = paintutils.loadImage("Apps/AppIcons/default")
			end
			if i <= 5 then
				paintutils.drawImage(image,appX[i],appY[1])
			else
				paintutils.drawImage(image,appX[i],appY[2])
			end
			term.setBackgroundColor(colors.gray)
			term.setTextColor(colors.white)
			if i <= 5 then
				term.setCursorPos(appX[i] - 1,appY[1] + 3)
			else
				term.setCursorPos(appX[i] - 1,appY[2] + 3)
			end
			print(loadedApps[i])
		end
	end
	term.setTextColor(colors.black)
	ClockID = os.startTimer(1)
end
function showContext()
	if cx <= 42 then
		conX, conY = cx + 1, cy
	else
		conX, conY = cx - 10,cy
	end
	for i=0,3 do
		paintutils.drawLine(conX,conY + i,conX + 9,conY + i,colors.white)
	end
	if selectedApp == "Disk" then
		term.setTextColor(colors.black)
		term.setCursorPos(conX + 1,conY + 1)
		write("Start...")
		term.setCursorPos(conX + 1,conY + 2)
		write("Skub Ud")
		paintutils.drawLine(conX + 1,conY + 4,conX + 9,conY + 4,colors.black)
		paintutils.drawLine(conX + 10,conY + 1,conX + 10,conY + 4,colors.black)
		while true do
			e, but, cx, cy = framework.eventHandler()
			if e == "mouse_click" then
				if cx >= conX and cx <= conX + 9 and cy == conY + 1 and fs.exists("Apps/Filer") then
					term.setBackgroundColor(colors.lightBlue)
					term.setTextColor(colors.white)
					term.setCursorPos(conX,conY + 1)
					write(" Start... ")
					sleep(0.2)
					shell.run("Apps/Filer","disk","getFile")
					while true do
						e, par1 = framework.eventHandler()
						if e == "Filer" then
							if par1 ~= false then
								shell.run(par1)
							end
							break
						end
					end
				elseif cx >= conX and cx <= conX + 9 and cy == conY + 2 then
					term.setBackgroundColor(colors.lightBlue)
					term.setTextColor(colors.white)
					term.setCursorPos(conX,conY + 2)
					write(" Skub Ud  ")
					sleep(0.2)
					for k,v in pairs(rs.getSides()) do
						if peripheral.getType(v) == "drive" then
							disk.eject(v)
						end
					end
				end
				break
			end
		end
	else
		term.setTextColor(colors.black)
		term.setCursorPos(conX + 1,conY + 1)
		write("Slet")
		term.setCursorPos(conX + 1,conY + 2)
		if fs.exists("Apps/Filer") and fs.exists("Apps/data/"..selectedApp) then
			write("Data...")
			dataDoesExist = true
		else
			term.setTextColor(colors.lightGray)
			write("Data...")
			dataDoesExist = false
		end
		paintutils.drawLine(conX + 1,conY + 4,conX + 9,conY + 4,colors.black)
		paintutils.drawLine(conX + 10,conY + 1,conX + 10,conY + 4,colors.black)
		while true do
			e, but, cx, cy = framework.eventHandler()
			if e == "mouse_click" then
				if cx >= conX and cx <= conX + 9 and cy == conY + 1 then
					term.setBackgroundColor(colors.lightBlue)
					term.setTextColor(colors.white)
					term.setCursorPos(conX,conY + 1)
					write(" Slet     ")
					sleep(0.2)
					if emilworks.popupMsg(colors.lime,"6","EmilOS","Vil du slette "..selectedApp.."?") then
						fs.delete("Apps/"..selectedApp)
						if fs.exists("Apps/AppIcons/"..selectedApp) then
							fs.delete("Apps/AppIcons/"..selectedApp)
						end
						if fs.exists("Apps/data/"..selectedApp) then
							if emilworks.popupMsg(colors.lime,"6","EmilOS",selectedApp.." har gemte data.","Slet disse?") then
								fs.delete("Apps/data/"..selectedApp)
							end
						end
					end
				elseif cx >= conX and cx <= conX + 9 and cy == conY + 2 and dataDoesExist then
					term.setBackgroundColor(colors.lightBlue)
					term.setTextColor(colors.white)
					term.setCursorPos(conX,conY + 2)
					write(" Data...  ")
					sleep(0.2)
					shell.run("Apps/Filer","Apps/data/"..selectedApp)
				end
				break
			end
		end
	end
	drawMain()
end
function openSidebar(bSidebarIsOpen)
	if not bSidebarIsOpen then
		sidebarFirsttime = true
		for i=51,37,-2 do
			if not sidebarFirsttime then
				sidebarFirsttime = false
			else
				while true do
					sleepTimer = os.startTimer(0.05)
					local e = framework.eventHandler()
					if e == "timer" then
						break
					end
				end
			end
			paintutils.drawLine(i,2,i,19,colors.lightGray)
			paintutils.drawLine(i + 1,2,i + 1,19,colors.lightGray)
		end
	else
		for i=37,51 do
			paintutils.drawLine(i,2,i,19,colors.lightGray)
		end
	end
	if nSidebarPage == 1 then
		term.setTextColor(colors.white)
		messages = framework.messageHandler("load")
		currentMessages = {}
		term.setCursorPos(38,2)
		local times = 0
		for k,v in pairs(messages) do
			times = times + 1
			if times <= 3 then
				local x,y = term.getCursorPos()
				table.insert(currentMessages,v["title"])
				term.setCursorPos(38,y + 1)
				write(v["title"])
				term.setCursorPos(50,y + 1)
				write("X")
				term.setCursorPos(38,y + 2)
				write("-------------")
				term.setCursorPos(38,y + 3)
				write(v["textLine1"])
				if v["textLine2"] then
					term.setCursorPos(38,y + 4)
					write(v["textLine2"])
				end
				term.setCursorPos(38,y + 5)
			end
		end
	elseif nSidebarPage == 2 then
		term.setTextColor(colors.white)
		term.setCursorPos(38,3)
		write("Enheder")
		term.setCursorPos(38,5)
		write("Bottom:")
		if peripherals["bottom"] then
			term.setCursorPos(39,6)
			write(peripherals["bottom"])
		end
		term.setCursorPos(38,7)
		write("Top:")
		if peripherals["top"] then
			term.setCursorPos(39,8)
			write(peripherals["top"])
		end
		term.setCursorPos(38,9)
		write("Back:")
		if peripherals["back"] then
			term.setCursorPos(39,10)
			write(peripherals["back"])
		end
		term.setCursorPos(38,11)
		write("Front:")
		if peripherals["front"] then
			term.setCursorPos(39,12)
			write(peripherals["front"])
		end
		term.setCursorPos(38,13)
		write("Right:")
		if peripherals["right"] then
			term.setCursorPos(39,14)
			write(peripherals["right"])
		end
		term.setCursorPos(38,15)
		write("Left:")
		if peripherals["left"] then
			term.setCursorPos(39,16)
			write(peripherals["left"])
		end
	end
	term.setCursorPos(41,18)
	term.setTextColor(colors.gray)
	if nSidebarPage == 1 then
		term.setTextColor(colors.white)
	end
	write("o  ")
	term.setTextColor(colors.gray)
	if nSidebarPage == 2 then
		term.setTextColor(colors.white)
	end
	write("o  ")
	term.setTextColor(colors.gray)
	if nSidebarPage == 3 then
		term.setTextColor(colors.white)
	end
	write("o")
end

 --Main code block
drawMain()
while true do
	if clicked then
		drawMain()
		clicked = false
	end
	e, but, cx, cy = framework.eventHandler(true)
	if e == "mouse_click" or e == "key" then
		if e == "key" then
			cx, cy = 0, 0
		end
		if cx >= 3 and cx <= 8 and cy == 1 or e == "key" and but == keys.leftCtrl then
			if bPopup then
				drawMain()
			end
			term.setCursorPos(2,1)
			term.setBackgroundColor(colors.lightBlue)
			term.setTextColor(colors.white)
			write(" EmilOS ")
			cB = framework.menu({"Om EmilOS","br","Indstillinger","App Butik","Shell","br","Luk ned..."},nil,true)
			if cB == 1 then
				if _CC_VERSION then
					pText = "ComputerCraft ".._CC_VERSION
				else
					pText = "("..os.version()..")"
				end
				if isRunningBeta then
					versionText = version.." (Beta)"
				else
					versionText = version
				end
				emilworks.popupMsg(colors.lime,"3","EmilOS","EmilOS "..versionText,pText,"","(c) 2015 Emil Inc.")
				os.pullEvent("mouse_click")
			elseif cB == 3 then
				shell.run("System/Apps/settings")
				setFile = fs.open("System/settings","r")
				settings = textutils.unserialize(setFile.readAll())
				setFile.close()
				framework.eventHandler(nil,true)
			elseif cB == 4 then
				shell.run("System/Apps/appStore")
				while true do
					e, par1 = framework.eventHandler()
					if e == "appStore" then
						if par1 == true then
							table.insert(loadedApps,"SysUpd")
						end
						break
					end
				end
			elseif cB == 5 then
				term.setBackgroundColor(colors.black)
				term.setTextColor(colors.yellow)
				term.setCursorPos(1,1)
				term.clear()
				print('"exit" for at lukke')
				shell.run("rom/programs/shell")
			elseif cB == 7 then
				if emilworks.popupMsg(colors.lime,"6","EmilOS","Vil du lukke ned nu?") == true then
					return true
				end
			end
			clicked = true
		elseif cx == 11 and cy == 1 then
			term.setCursorPos(10,1)
			term.setBackgroundColor(colors.lightBlue)
			term.setTextColor(colors.white)
			write(" * ")
			sleep(0.2)
			serverNotReachable = false
			if not isGettingData then
				framework.httpRequest("http://"..settings.serverUrl.."/EmilOSScript.php","request=GetAppList1")
			end
			drawMain()
		elseif cx >= 49 and cx <= 51 and cy == 1 then
			if bPopup then
				drawMain()
			end
			term.setCursorPos(49,1)
			term.setBackgroundColor(colors.lightBlue)
			term.setTextColor(colors.white)
			write(" @ ")
			openSidebar()
			sidebar = true
			while sidebar do
				e, but, cx, cy = framework.eventHandler()
				if e == "mouse_click" then
					if cx >= 37 then
						if cx >= 49 and cy == 1 then
							break
						elseif cx == 41 and cy == 18 then
							nSidebarPage = 1
							openSidebar(true)
						elseif cx == 44 and cy == 18 then
							nSidebarPage = 2
							openSidebar(true)
						elseif cx == 47 and cy == 18 then
							nSidebarPage = 3
							openSidebar(true)
						elseif cx == 50 and cy == 3 and nSidebarPage == 1 and currentMessages[1] ~= nil then
							messages[currentMessages[1]] = nil
							currentMessages[1] = nil
							framework.messageHandler("save")
							openSidebar(true)
						elseif cx == 50 and cy == 8 and nSidebarPage == 1 and currentMessages[2] ~= nil then
							messages[currentMessages[2]] = nil
							currentMessages[2] = nil
							framework.messageHandler("save")
							openSidebar(true)
						elseif cx == 50 and cy == 13 and nSidebarPage == 1 and currentMessages[3] ~= nil then
							messages[currentMessages[3]] = nil
							currentMessages[3] = nil
							framework.messageHandler("save")
							openSidebar(true)
						end
					else
						break
					end
				elseif e == "peripheral" or e == "peripheral_detach" then
					peripherals = {}
					for k,v in pairs(rs.getSides()) do
						peripherals[v] = peripheral.getType(v)
					end
					if nSidebarPage == 2 then
						openSidebar(true)
					end
				end
			end
			clicked = true
		else
			for i=1,#loadedApps do
				if cx >= appX[i] and cx <= appX[i] + 2 and cy >= 4 and cy <= 6 and i <= 5 then
					if bPopup then
						bPopup = false
						drawMain()
					end
					if but == 2 then
						selectedApp = loadedApps[i]
						showContext()
					elseif loadedApps[i] ~= "Disk" then
						framework.clearPopup()
						_, bSuccess = pcall(shell.run("Apps/"..loadedApps[i]))
						if not bSuccess then
							emilworks.popupMsg(colors.red,"1","EmilOS",loadedApps[i].." lukkede","uforventet")
						end
					elseif fs.exists("Apps/Filer") then
						framework.clearPopup()
						shell.run("Apps/Filer","disk")
					end
					clicked = true
				elseif cx >= appX[i] and cx <= appX[i] + 2 and cy >= 12 and cy <= 14 and i >= 6 and not clicked then
					if bPopup then
						bPopup = false
						drawMain()
					end
					if but == 2 then
						selectedApp = loadedApps[i]
						showContext()
					elseif loadedApps[i] ~= "Disk" then
						framework.clearPopup()
						_, bSuccess = pcall(shell.run("Apps/"..loadedApps[i]))
						if not bSuccess then
							emilworks.popupMsg(colors.red,"1","EmilOS",loadedApps[i].." lukkede","uforventet")
						end
					elseif fs.exists("Apps/Filer") then
						framework.clearPopup()
						shell.run("Apps/Filer","disk")
					end
					clicked = true
				end
			end
		end
	elseif e == "framework_redraw" then
		drawMain()
	elseif e == "disk" then
		table.insert(loadedApps,"Disk")
		nDisk = #loadedApps
		if fs.exists("disk/autorun") then
			if emilworks.popupMsg(colors.lime,"6","EmilOS","Disken har et autorun","program. Vil du","koere dette?") then
				shell.run("disk/autorun")
				isAlreadyRun = true
			end
		end
		drawMain()
		if not isAlreadyRun then
			bPopup = framework.message("EmilOS","Disk","fundet",true)
			isAlreadyRun = nil
		end
	elseif e == "disk_eject" then
		table.remove(loadedApps,nDisk)
		drawMain()
	elseif e == "peripheral" or e == "peripheral_detach" then
		peripherals = {}
		for k,v in pairs(rs.getSides()) do
			peripherals[v] = peripheral.getType(v)
		end
	elseif e == "http_success" then
		drawMain()
		local versionTable = textutils.unserialize(cx.readAll())
		if tonumber(versionTable.System) > version then
			bPopup = framework.message("EmilOS","Opdatering","fundet",true,"System/Apps/appStore")
		elseif tonumber(versionTable.System) < version then
			bPopup = framework.message("EmilOS","Bruger Beta",version,true)
			file = fs.open("System/installedApps","r")
			local installedApps = textutils.unserialize(file.readAll())
			file.close()
			installedApps.System = tostring(version)
			file = fs.open("System/installedApps","w")
			file.write(textutils.serialize(installedApps))
			file.close()
			isRunningBeta = true
		end
	elseif e == "http_failure" then
		serverNotReachable = true
		drawMain()
		bPopup = framework.message("EmilOS","Server ikke","tilgaengelig",true)
	end
end 
