 --EmilOS
local version = 1.5
 --(c) 2015 Emil Inc. All Rights Reserved

 --Locals
local appX = {4,14,24,34,44,4,14,24,34,44}
local appY = {4,12}
local nSidebarPage = 1
local clicked = false
local currentMessages = {}
local newBoot = true
_G.isEmilOS = true

 --Load APIs
os.loadAPI("System/emilworks")
os.loadAPI("System/framework")

 --Load Settings
setFile = fs.open("System/settings","r")
local settings = textutils.unserialize(setFile.readAll())
setFile.close()
if settings.productKey then
	framework.httpRequest("http://"..settings.serverUrl.."/EmilOSScript.php","request=GetAppList1")
	_G.isActivated = true
else
	framework.delayedMessage("EmilOS","EmilOS er ikke","aktiveret",true)
end

 --Functions
local function getInstalledApps()
	loadedApps = {}
	for k,v in pairs(fs.list("Apps")) do
		if not fs.isDir("Apps/"..v) and v ~= "Disk" then
			table.insert(loadedApps,v)
		end
	end
	if fs.exists("disk") then
		table.insert(loadedApps,"Disk")
	end
end
local function drawMainBar()
	paintutils.drawLine(1,1,51,1,colors.white)
	term.setCursorPos(3,1)
	term.setTextColor(colors.black)
	write("EmilOS")
	term.setCursorPos(11,1)
	if isGettingData then
		term.setTextColor(colors.lightGray)
	elseif serverNotReachable then
		term.setTextColor(colors.red)
	end
	if isActivated then
		term.setTextColor(colors.black)
		write("*")
	end
	paintutils.drawLine(30,1,48,1,colors.white)
	term.setCursorPos(48 - textutils.formatTime(os.time(),settings.fullClock):len(),1)
	term.setBackgroundColor(colors.white)
	term.setTextColor(colors.black)
	write(textutils.formatTime(os.time(),settings.fullClock))
	term.setCursorPos(50,1)
	write("@")
	term.setTextColor(colors.black)
end
local function drawApps()
	if newBoot or exitedProgram then
		for i=1,18 do
			paintutils.drawLine(1,i + 1,51,i + 1,colors[settings.background])
		end
		newBoot, exitedProgram = false, false
	elseif wasMenu then
		for i=2,17 do
			paintutils.drawLine(i,2,i,19,colors[settings.background])
		end
		wasMenu = false
	else
		for i=36,51 do
			paintutils.drawLine(i,2,i,19,colors[settings.background])
		end
	end
	for i=1,#loadedApps do
		if loadedApps[i] ~= nil then
			if fs.exists("Apps/AppIcons/"..loadedApps[i]) then
				image = paintutils.loadImage("Apps/AppIcons/"..loadedApps[i])
			else
				image = paintutils.loadImage("Apps/AppIcons/default")
			end
			if i <= 5 then
				paintutils.drawImage(image,appX[i],appY[1])
			else
				paintutils.drawImage(image,appX[i],appY[2])
			end
			term.setBackgroundColor(colors[settings.background])
			term.setTextColor(colors.white)
			if i <= 5 then
				term.setCursorPos(appX[i] - 1,appY[1] + 3)
			else
				term.setCursorPos(appX[i] - 1,appY[2] + 3)
			end
			write(loadedApps[i])
		end
	end
end
local function drawMain()
	_G.bPopup = false
	framework.clearPopup()
	drawMainBar()
	drawApps()
end
local function showContext()
	if cx <= 42 then
		conX, conY = cx + 1, cy
	else
		conX, conY = cx - 10,cy
	end
	for i=0,3 do
		paintutils.drawLine(conX,conY + i,conX + 9,conY + i,colors.white)
	end
	if selectedApp == "Disk" then
		term.setTextColor(colors.black)
		term.setCursorPos(conX + 1,conY + 1)
		write("Start...")
		term.setCursorPos(conX + 1,conY + 2)
		write("Skub Ud")
		paintutils.drawLine(conX + 1,conY + 4,conX + 9,conY + 4,colors.black)
		paintutils.drawLine(conX + 10,conY + 1,conX + 10,conY + 4,colors.black)
		while true do
			e, but, cx, cy = framework.eventHandler()
			if e == "mouse_click" then
				if cx >= conX and cx <= conX + 9 and cy == conY + 1 and fs.exists("Apps/Filer") then
					term.setBackgroundColor(colors.lightBlue)
					term.setTextColor(colors.white)
					term.setCursorPos(conX,conY + 1)
					write(" Start... ")
					sleep(0.2)
					shell.run("Apps/Filer","disk","getFile")
					while true do
						e, par1 = framework.eventHandler()
						if e == "Filer" then
							if par1 ~= false then
								shell.run(par1)
							end
							break
						end
					end
				elseif cx >= conX and cx <= conX + 9 and cy == conY + 2 then
					term.setBackgroundColor(colors.lightBlue)
					term.setTextColor(colors.white)
					term.setCursorPos(conX,conY + 2)
					write(" Skub Ud  ")
					sleep(0.2)
					for k,v in pairs(rs.getSides()) do
						if peripheral.getType(v) == "drive" then
							disk.eject(v)
						end
					end
					for i=1,#loadedApps do
						if loadedApps[i] == "Disk" then
							table.remove(loadedApps,i)
						end
					end
				end
				break
			end
		end
	else
		term.setTextColor(colors.black)
		term.setCursorPos(conX + 1,conY + 1)
		write("Slet")
		term.setCursorPos(conX + 1,conY + 2)
		if fs.exists("Apps/Filer") and fs.exists("Apps/data/"..selectedApp) then
			dataDoesExist = true
		else
			term.setTextColor(colors.lightGray)
			dataDoesExist = false
		end
		write("Data...")
		paintutils.drawLine(conX + 1,conY + 4,conX + 9,conY + 4,colors.black)
		paintutils.drawLine(conX + 10,conY + 1,conX + 10,conY + 4,colors.black)
		while true do
			e, but, cx, cy = framework.eventHandler()
			if e == "mouse_click" then
				if cx >= conX and cx <= conX + 9 and cy == conY + 1 then
					term.setBackgroundColor(colors.lightBlue)
					term.setTextColor(colors.white)
					term.setCursorPos(conX,conY + 1)
					write(" Slet     ")
					sleep(0.2)
					if emilworks.popupMsg(colors.lime,"6","EmilOS","Vil du slette "..selectedApp.."?") then
						fs.delete("Apps/"..selectedApp)
						if fs.exists("Apps/AppIcons/"..selectedApp) then
							fs.delete("Apps/AppIcons/"..selectedApp)
						end
						if fs.exists("Apps/data/"..selectedApp) then
							if emilworks.popupMsg(colors.lime,"6","EmilOS",selectedApp.." har gemte data.","Slet disse?") then
								fs.delete("Apps/data/"..selectedApp)
							end
						end
						getInstalledApps()
					end
				elseif cx >= conX and cx <= conX + 9 and cy == conY + 2 and dataDoesExist then
					term.setBackgroundColor(colors.lightBlue)
					term.setTextColor(colors.white)
					term.setCursorPos(conX,conY + 2)
					write(" Data...  ")
					sleep(0.2)
					shell.run("Apps/Filer","Apps/data/"..selectedApp)
				end
				break
			end
		end
	end
	drawMain()
end
local function openSidebar(bSidebarIsOpen)
	if not bSidebarIsOpen then
		framework.clearPopup()
		sidebarFirsttime = true
		if not settings.noAnim then
			for i=51,37,-2 do
				if not sidebarFirsttime then
					sidebarFirsttime = false
				else
					sleepTimer = os.startTimer(0.05)
					framework.eventHandler()
				end
				paintutils.drawLine(i,2,i,19,colors.lightGray)
				paintutils.drawLine(i + 1,2,i + 1,19,colors.lightGray)
			end
		else
			for i=37,51 do
				paintutils.drawLine(i,2,i,19,colors.lightGray)
			end
		end
	else
		for i=37,51 do
			paintutils.drawLine(i,2,i,19,colors.lightGray)
		end
	end
	wasMenu, exitedProgram = false
	if nSidebarPage == 1 then
		term.setTextColor(colors.white)
		messages = framework.messageHandler("load")
		currentMessages = {}
		term.setCursorPos(38,2)
		local times = 0
		for k,v in pairs(messages) do
			times = times + 1
			if times <= 3 then
				local x,y = term.getCursorPos()
				table.insert(currentMessages,v["title"])
				term.setCursorPos(38,y + 1)
				write(v["title"])
				term.setCursorPos(50,y + 1)
				write("x")
				term.setCursorPos(38,y + 2)
				write("-------------")
				term.setCursorPos(38,y + 3)
				write(v["textLine1"])
				if v["textLine2"] then
					term.setCursorPos(38,y + 4)
					write(v["textLine2"])
				end
				term.setCursorPos(38,y + 5)
			end
		end
	elseif nSidebarPage == 2 then
		term.setTextColor(colors.white)
		term.setCursorPos(38,3)
		write("Enheder")
		local writeY = 1
		for k,v in pairs(rs.getSides()) do
			if peripheral.getType(v) then
				term.setCursorPos(38,4 + writeY)
				if peripheral.getType(v) == "modem" and rednet.isOpen(v) then
					write("modem (Aktiv)")
				else
					write(peripheral.getType(v))
				end
				writeY = writeY + 1
			end
		end
	end
	term.setCursorPos(41,18)
	term.setTextColor(colors.gray)
	if nSidebarPage == 1 then
		term.setTextColor(colors.white)
	end
	write("o  ")
	term.setTextColor(colors.gray)
	if nSidebarPage == 2 then
		term.setTextColor(colors.white)
	end
	write("o  ")
	term.setTextColor(colors.gray)
	if nSidebarPage == 3 then
		term.setTextColor(colors.white)
	end
	write("o")
end

 --On boot screen draw
getInstalledApps()
drawMain()

 --Main loop
while true do
	if clicked then
		drawMain()
		clicked = false
	end
	e, but, cx, cy = framework.eventHandler()
	if e == "mouse_click" or e == "key" then
		if e == "key" then
			cx, cy = 0, 0
		end
		if cx >= 3 and cx <= 8 and cy == 1 or e == "key" and but == keys.leftCtrl then
			if _G.bPopup then
				drawMain()
			end
			wasMenu = true
			term.setCursorPos(2,1)
			term.setBackgroundColor(colors.lightBlue)
			term.setTextColor(colors.white)
			write(" EmilOS ")
			cB = framework.menu({"Om EmilOS","br","Indstillinger","App Butik","Shell","br","Luk ned..."},nil,true)
			if cB == 1 then
				if _CC_VERSION then
					pText = "ComputerCraft ".._CC_VERSION
				else
					pText = "("..os.version()..")"
				end
				if isRunningBeta then
					versionText = version.." (Beta)"
				else
					versionText = version
				end
				emilworks.popupMsg(colors.lime,"3","EmilOS","EmilOS "..versionText,pText,"","(c) 2015 Emil Inc.")
				parallel.waitForAny(function() os.pullEvent("mouse_click") end,function() os.pullEvent("key") end)
				exitedProgram = true
			elseif cB == 3 then
				shell.run("System/Apps/settings")
				setFile = fs.open("System/settings","r")
				settings = textutils.unserialize(setFile.readAll())
				setFile.close()
				framework.eventHandler(true)
				exitedProgram = true
			elseif cB == 4 then
				if isActivated then
					shell.run("System/Apps/appStore")
					getInstalledApps()
				else
					emilworks.popupMsg(colors.lime,"1","EmilOS","Aktiver EmilOS for at","bruge App Butik")
				end
				exitedProgram = true
			elseif cB == 5 then
				term.setBackgroundColor(colors.black)
				term.setTextColor(colors.yellow)
				term.setCursorPos(1,1)
				term.clear()
				shell.run("rom/programs/shell")
				exitedProgram = true
			elseif cB == 7 then
				if emilworks.popupMsg(colors.lime,"6","EmilOS","Vil du lukke ned nu?") == true then
					os.queueEvent("shutdown")
					return
				end
				exitedProgram = true
			end
			clicked = true
		elseif cx == 11 and cy == 1 then
			if isActivated then
				term.setCursorPos(10,1)
				term.setBackgroundColor(colors.lightBlue)
				term.setTextColor(colors.white)
				write(" * ")
				sleep(0.2)
				serverNotReachable = false
				if not isGettingData then
					framework.httpRequest("http://"..settings.serverUrl.."/EmilOSScript.php","request=GetAppList1")
				end
				drawMainBar()
			end
		elseif cx >= 49 and cx <= 51 and cy == 1 then
			if _G.bPopup then
				drawApps()
				_G.bPopup = false
			end
			term.setCursorPos(49,1)
			term.setBackgroundColor(colors.lightBlue)
			term.setTextColor(colors.white)
			write(" @ ")
			openSidebar()
			sidebar = true
			while sidebar do
				e, but, cx, cy = framework.eventHandler()
				if e == "mouse_click" then
					if cx >= 37 then
						if cx >= 49 and cy == 1 then
							break
						elseif cx == 41 and cy == 18 then
							nSidebarPage = 1
							openSidebar(true)
						elseif cx == 44 and cy == 18 then
							nSidebarPage = 2
							openSidebar(true)
						elseif cx == 47 and cy == 18 then
							nSidebarPage = 3
							openSidebar(true)
						elseif cx == 50 and cy == 3 and nSidebarPage == 1 and currentMessages[1] ~= nil then
							messages[currentMessages[1]] = nil
							currentMessages[1] = nil
							framework.messageHandler("save")
							openSidebar(true)
						elseif cx == 50 and cy == 8 and nSidebarPage == 1 and currentMessages[2] ~= nil then
							messages[currentMessages[2]] = nil
							currentMessages[2] = nil
							framework.messageHandler("save")
							openSidebar(true)
						elseif cx == 50 and cy == 13 and nSidebarPage == 1 and currentMessages[3] ~= nil then
							messages[currentMessages[3]] = nil
							currentMessages[3] = nil
							framework.messageHandler("save")
							openSidebar(true)
						end
					else
						if cy == 1 then
							os.queueEvent("mouse_click",but,cx,cy)
						end
						break
					end
				elseif e == "peripheral" or e == "peripheral_detach" then
					if nSidebarPage == 2 then
						openSidebar(true)
					end
				end
			end
			clicked = true
		else
			for i=1,#loadedApps do
				if cx >= appX[i] and cx <= appX[i] + 2 and cy >= 4 and cy <= 6 and i <= 5 then
					selectedApp = loadedApps[i]
					if _G.bPopup then
						_G.bPopup = false
						drawApps()
					end
					if but == 2 then
						showContext()
					elseif loadedApps[i] ~= "Disk" then
						framework.clearPopup()
						_G.appDataDir = "Apps/data/"..selectedApp
						shell.run("Apps/"..selectedApp)
						crashTimer = os.startTimer(0.05)
						while true do
							e, par1 = os.pullEvent()
							if e == "frameworkCloseProgram" then
								break
							elseif e == "timer" and par1 == crashTimer then
								framework.delayedMessage(selectedApp,selectedApp.." lukkede","uventet",true)
								break
							end
						end
					elseif fs.exists("Apps/Filer") then
						framework.clearPopup()
						shell.run("Apps/Filer","disk")
					end
					exitedProgram, wasMenu = true, false
					clicked = true
				elseif cx >= appX[i] and cx <= appX[i] + 2 and cy >= 12 and cy <= 14 and i >= 6 and not clicked then
					selectedApp = loadedApps[i]
					if _G.bPopup then
						_G.bPopup = false
						drawApps()
					end
					if but == 2 then
						showContext()
					elseif loadedApps[i] ~= "Disk" then
						framework.clearPopup()
						_G.appDataDir = "Apps/data/"..selectedApp
						shell.run("Apps/"..selectedApp)
						crashTimer = os.startTimer(0.05)
						while true do
							e, par1 = os.pullEvent()
							if e == "frameworkCloseProgram" then
								break
							elseif e == "timer" and par1 == crashTimer then
								framework.delayedMessage(selectedApp,selectedApp.." lukkede","uventet",true)
								break
							end
						end
					elseif fs.exists("Apps/Filer") then
						framework.clearPopup()
						shell.run("Apps/Filer","disk")
					end
					exitedProgram, wasMenu = true, false
					clicked = true
				end
			end
		end
	elseif e == "framework_redraw" then
		wasMenu, exitedProgram = false, false
		drawApps()
	elseif e == "disk" then
		table.insert(loadedApps,"Disk")
		if fs.exists("disk/autorun") then
			if emilworks.popupMsg(colors.lime,"6","EmilOS","Disken har et autorun","program. Vil du","koere dette?") then
				shell.run("disk/autorun")
			end
		end
		exitedProgram = true
		drawMain()
	elseif e == "disk_eject" then
		for i=1,#loadedApps do
			if loadedApps[i] == "Disk" then
				table.remove(loadedApps,i)
			end
		end
	elseif e == "http_success" then
		drawMainBar()
		local versionTable = textutils.unserialize(cx.readAll())
		if tonumber(versionTable.System) > version then
			framework.message("EmilOS","Opdatering","fundet",true,"System/Apps/appStore")
		elseif tonumber(versionTable.System) < version then
			framework.message("EmilOS","Bruger Beta",version,true)
			file = fs.open("System/installedApps","r")
			local installedApps = textutils.unserialize(file.readAll())
			file.close()
			installedApps.System = tostring(version)
			file = fs.open("System/installedApps","w")
			file.write(textutils.serialize(installedApps))
			file.close()
			_G.EmilOSBeta = true
			isRunningBeta = true
		end
	elseif e == "http_failure" then
		_G.EmilOSServerUnreachable = true
		serverNotReachable = true
		drawMainBar()
		framework.message("EmilOS","Server ikke","tilgaengelig",true)
	elseif e == "terminate" then
		return
	end
end